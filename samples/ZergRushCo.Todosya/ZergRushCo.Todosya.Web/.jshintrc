{
    // Settings
    "passfail"      : false,  // Stop on first error.
    "maxerr"        : 10,     // Maximum error before stopping.

    // Predefined globals whom JSHint will ignore.
    "browser"       : true,   // Standard browser globals e.g. `window`, `document`.
    "jquery"        : true,

    // Development.
    "debug"         : false,  // Allow debugger statements e.g. browser breakpoints.
    "devel"         : true,   // Allow developments statements e.g. `console.log();`.

    // ECMAScript 5.
    // "esversion"     : 5,  // Allow ECMAScript 5 syntax.
    "strict"        : true,  // Require `use strict` pragma  in every file.
    "globalstrict"  : true,  // Allow global "use strict" (also enables 'strict').

    // Personal styling preferences.
    "curly"         : true,   // This option requires you to always put curly braces around blocks in loops and conditionals
    "eqeqeq"        : true,   // This options prohibits the use of == and != in favor of === and !==
    "freeze"        : true,   // This options prohibits overwriting prototypes of native objects such as Array, Date and so on.
    "maxdepth"      : 3,      // This option lets you control how nested do you want your blocks to be
    "maxparams"     : 4,      // This option lets you set the max number of statements allowed per function
    "nonew"         : true,   // Prohibit use of constructors for side-effects.
    "undef"         : true,   // This option prohibits the use of explicitly undeclared variables. This option is very useful for spotting leaking and mistyped variables.
    "unused"        : true,   // This option warns when you define and never use your variables. It is very useful for general code cleanup, especially when used in addition to undef.
    "varstmt"       : false,   // When set to true, the use of VariableStatements are forbidden.
    "eqnull"        : true,   // This option suppresses warnings about == null comparisons. Such comparisons are often useful when you want to check if a variable is null or undefined.
    "evil"          : false
}
