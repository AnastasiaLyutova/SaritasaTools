@model Saritasa.BoringWarehouse.Domain.Products.Commands.UpdateProductCommand

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>UpdateProductCommand</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProductId)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sku, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Sku, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Sku, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsActive)
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CompanyId, new SelectList(Model.Companies, "Id", "Name", Model.CompanyId), "--Select--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <table id="propertiesTable" class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <td class="hidden-column">Id</td>
                        <td>Name</td>
                        <td>Value</td>
                        <td></td>
                    </tr>
                </thead>
            </table>
        </div>
        <div class="form-group row">
            <div class="col-md-offset-2 col-md-6">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
            <div class="col-md-2">
                <a class="btn btn-danger" href="@Url.Action("Delete", new { id = Model.ProductId })">Delete</a>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/datatables")
    @Scripts.Render("~/bundles/bootbox")
    @Scripts.Render("~/bundles/jquery-tmpl")
    @Scripts.Render("~/bundles/properties-list-edit")

    <script src="~/Scripts/propertiesListEdit.js"></script>

    <script>
        $(document).ready(function () {

            var propertiesList = [@foreach (var property in Model.Properties)
            {
                <text>
                    {
                        Id: @property.Id,
                        Name: "@property.Name",
                        Value: "@property.Value"
                    },
                </text>
            }];

            $('#propertiesTable').PropertiesListEdit({
                data: propertiesList
            });
        });
    </script>
}